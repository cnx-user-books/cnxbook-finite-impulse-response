<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Discrete-Time Filtering</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>e78b11a5-63fd-44db-af06-87f621a8c49a</md:uuid>
</metadata>



  <content>
    <section id="sec1">
      <title>Discrete-Time Filtering</title>
      <para id="p1">
	Most of you should be already familiar with continuous-time
	filters, which takes continuous-time input signal and output a
	continuous-time signal. Discrete-time filters, which the
	sampling device and digital-to-analog converter, can perform
	the same function as the continuous-time filters with properly
	designed system blocks. Continuous-time filters are fully
	specified by its impulse response 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">h</m:ci>
	    <m:ci>t</m:ci>
	  </m:apply>
	</m:math> and the output signal
	<m:math>
	  <m:apply>
	    <m:ci type="fn">y</m:ci>
	    <m:ci>t</m:ci>
	  </m:apply>
	</m:math> for input signal 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">x</m:ci>
	    <m:ci>t</m:ci>
	  </m:apply>
	</m:math> is given by the convolution integral
      <equation id="eqn1">
	
      </equation>
      </para>
      <para id="p2">
	Similarly, discrete-time filters are specified by their unit
	sample response 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">h</m:ci>
	    <m:ci>n</m:ci>
	  </m:apply>
	</m:math>. The output signal 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">y</m:ci>
	    <m:ci>n</m:ci>
	  </m:apply>
	</m:math> for the input
	signal 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">x</m:ci>
	    <m:ci>n</m:ci>
	  </m:apply>
	</m:math> (samples of input continuous-time signal 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">x</m:ci>
	    <m:ci>t</m:ci>
	  </m:apply>
	</m:math>) is given by the discrete-time convolution
	<equation id="eqn2">
	  
	</equation>
      </para>
      </section>
      <section id="sec2">
	<title>Discrete-Time Filter Design</title>
	<para id="p3">
	The discrete-time filter design problem is to design the
	impulse response 
	<m:math>
	  <m:apply>
	    <m:ci type="fn">h</m:ci>
	    <m:ci>n</m:ci>
	  </m:apply>
	</m:math> so that the discrete-time filter, together with the
	sampling device and the discrete-to-continuous time converter,
	performs the same signal processing functions as an analog
	filter. There are many algorithms to design
	<m:math>
	  <m:apply>
	    <m:ci type="fn">h</m:ci>
	    <m:ci>n</m:ci>
	  </m:apply>
	</m:math> to implement desired filtering.
      </para>
    </section>
  </content>
  
</document>